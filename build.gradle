plugins {
    id 'checkstyle'
    id 'jacoco'
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.github.spotbugs' version '6.0.9'
    id 'com.diffplug.spotless' version '6.25.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    implementation 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}


jacoco {
    reportsDirectory = layout.buildDirectory.dir("reports/coverage")
}

checkstyle {
    toolVersion = '10.12.1'
    configFile = rootProject.file('config/checkstyle/checkstyle.xml')
}

spotbugs {
    toolVersion = '4.8.3'
    effort = 'max'
    reportLevel = 'low'
}

spotless {
    java {
        googleJavaFormat('1.17.0')
        target 'src/**/*.java'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
tasks.test {
    finalizedBy(tasks.jacocoTestReport)
}
tasks.jacocoTestReport {
    dependsOn(tasks.test)
    reports {
        xml.required = true
        html.required = true
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'PACKAGE'
            includes = ['com.example.duoc.service']
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.9
            }
        }
    }
}

tasks.named('check') {
    dependsOn 'spotbugsMain', 'spotbugsTest', 'checkstyleMain', 'checkstyleTest'
}